name: 'Private DNS Zone Plan and Apply'
on: [push]

permissions:
    id-token: write
    contents: read

env:
    ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    TF_VAR_mgmt_subscription_id: ${{ secrets.ARM_MGMT_SUBSCRIPTION_ID }}
    TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}

jobs:
    pdz-plan:
        name: 'Private DNS Zone Deployment Plan'
        runs-on: ubuntu-latest

        steps:
            # Checkout the repository to the GitHub Actions runner
            - name: Checkout repository
              uses: actions/checkout@v4

            # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_wrapper: false

            # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
            - name: Terraform Init
              run: terraform init

            # Format Terraform files to ensure they are properly formatted
            - name: Terraform Format Check
              run: terraform fmt -check

            # Generates an execution plan for Terraform
            - name: Terraform Plan
              run: terraform plan -out=tfplan -var-file=terraform.tfvars

            # Upload the Terraform plan to the artifacts
            - name: Upload Terraform Plan
              uses: actions/upload-artifact@v4
              with:
                  name: tfplan
                  path: tfplan

    pdz-apply:
        name: 'Private DNS Zone Deployment Apply'
        runs-on: ubuntu-latest
        needs: pdz-plan

        steps:
            # Checkout the repository to the GitHub Actions runner
            - name: Checkout
              uses: actions/checkout@v4

            # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
            - name: Terraform Init
              run: terraform init

            # Download saved plan from artifacts  
            - name: Download Terraform Plan
              uses: actions/download-artifact@v4
              with:
                name: tfplan

            # Terraform Apply
            - name: Terraform Apply
              run: terraform apply -auto-approve tfplan

